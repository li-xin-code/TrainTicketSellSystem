<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lixin.trainticketsellsystem.dao.TicketDao">

    <resultMap id="BaseResultMap" type="com.lixin.trainticketsellsystem.model.entity.Ticket">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="trainNumber" column="train_number" jdbcType="VARCHAR"/>
        <result property="departureTime" column="departure_time" jdbcType="TIMESTAMP"/>
        <result property="arrivalTime" column="arrival_time" jdbcType="TIMESTAMP"/>
        <result property="boardingStation" column="boarding_station" jdbcType="VARCHAR"/>
        <result property="disembarkingStation" column="disembarking_station" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="DECIMAL"/>
        <result property="ticketNumber" column="ticket_number" jdbcType="INTEGER"/>
    </resultMap>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select id,
               train_number,
               departure_time,
               arrival_time,
               boarding_station,
               disembarking_station,
               price,
               ticket_number
        from ticket
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="select" resultType="com.lixin.trainticketsellsystem.model.entity.Ticket">
        select id,
        train_number,
        departure_time,
        arrival_time,
        boarding_station,
        disembarking_station,
        price,
        ticket_number
        from ticket
        where boarding_station = #{query.boardingStation}
        and disembarking_station = #{query.disembarkingStation}
        <if test="query.start != null and query.end != null">
            and departure_time >= #{query.start}
            and departure_time <![CDATA[<=]]> #{query.end}
        </if>
    </select>

    <select id="selectByIds" resultType="com.lixin.trainticketsellsystem.model.entity.Ticket">
        select id,
               train_number,
               departure_time,
               arrival_time,
               boarding_station,
               disembarking_station,
               price,
               ticket_number
        from ticket
        where id in (#{ticketIds})
    </select>

    <select id="selectAll" resultType="com.lixin.trainticketsellsystem.model.entity.Ticket">
        select id,
               train_number,
               departure_time,
               arrival_time,
               boarding_station,
               disembarking_station,
               price,
               ticket_number
        from ticket
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from ticket
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.lixin.trainticketsellsystem.model.entity.Ticket" useGeneratedKeys="true">
        insert into ticket
        ( id, train_number, departure_time
        , arrival_time, boarding_station, disembarking_station
        , price, ticket_number)
        values ( #{id,jdbcType=BIGINT}, #{trainNumber,jdbcType=VARCHAR}, #{departureTime,jdbcType=TIMESTAMP}
               , #{arrivalTime,jdbcType=TIMESTAMP}, #{boardingStation,jdbcType=VARCHAR}
               , #{disembarkingStation,jdbcType=VARCHAR}
               , #{price,jdbcType=DECIMAL}, #{ticketNumber,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.lixin.trainticketsellsystem.model.entity.Ticket"
            useGeneratedKeys="true">
        insert into ticket
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="trainNumber != null">train_number,</if>
            <if test="departureTime != null">departure_time,</if>
            <if test="arrivalTime != null">arrival_time,</if>
            <if test="boardingStation != null">boarding_station,</if>
            <if test="disembarkingStation != null">disembarking_station,</if>
            <if test="price != null">price,</if>
            <if test="ticketNumber != null">ticket_number,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=BIGINT},</if>
            <if test="trainNumber != null">#{trainNumber,jdbcType=VARCHAR},</if>
            <if test="departureTime != null">#{departureTime,jdbcType=TIMESTAMP},</if>
            <if test="arrivalTime != null">#{arrivalTime,jdbcType=TIMESTAMP},</if>
            <if test="boardingStation != null">#{boardingStation,jdbcType=VARCHAR},</if>
            <if test="disembarkingStation != null">#{disembarkingStation,jdbcType=VARCHAR},</if>
            <if test="price != null">#{price,jdbcType=DECIMAL},</if>
            <if test="ticketNumber != null">#{ticketNumber,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lixin.trainticketsellsystem.model.entity.Ticket">
        update ticket
        <set>
            <if test="trainNumber != null">
                train_number = #{trainNumber,jdbcType=VARCHAR},
            </if>
            <if test="departureTime != null">
                departure_time = #{departureTime,jdbcType=TIMESTAMP},
            </if>
            <if test="arrivalTime != null">
                arrival_time = #{arrivalTime,jdbcType=TIMESTAMP},
            </if>
            <if test="boardingStation != null">
                boarding_station = #{boardingStation,jdbcType=VARCHAR},
            </if>
            <if test="disembarkingStation != null">
                disembarking_station = #{disembarkingStation,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="ticketNumber != null">
                ticket_number = #{ticketNumber,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lixin.trainticketsellsystem.model.entity.Ticket">
        update ticket
        set train_number         = #{trainNumber,jdbcType=VARCHAR},
            departure_time       = #{departureTime,jdbcType=TIMESTAMP},
            arrival_time         = #{arrivalTime,jdbcType=TIMESTAMP},
            boarding_station     = #{boardingStation,jdbcType=VARCHAR},
            disembarking_station = #{disembarkingStation,jdbcType=VARCHAR},
            price                = #{price,jdbcType=DECIMAL},
            ticket_number        = #{ticketNumber,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateTicketNumber">
        update ticket
        set ticket_number = ticket_number = 1
        where id = #{ticketId}
          and ticket_number > 1;
    </update>
</mapper>
